generator client {
  provider = "prisma-client-js"
  output   = "../src/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Province {
  id       Int    @id @default(autoincrement())
  province String @db.VarChar(255)
  city     City[]
}

model City {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  province_id Int
  province    Province  @relation(fields: [province_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "city_province_id_foreign")
  person      Person[]
  shelter     Shelter[]
}

model Person {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(255)
  birth_date     DateTime @db.Date
  gender         Int      @db.SmallInt
  address        String   @db.VarChar(255)
  city_id        Int
  phone          Int
  last_active_at DateTime @default(now()) @db.Timestamp(0)
  city           City     @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "person_city_id_foreign")
  pet            Pet[]
  shelter_id     Int?
  shelter        Shelter? @relation(fields: [shelter_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "person_shelter_id_foreign")
}

model Pet {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(50)
  birth_date     DateTime @db.Date
  gender         Int      @db.SmallInt
  species        String   @db.VarChar(50)
  weight         Int
  hair_type      String   @db.VarChar(50)
  hair_color     String   @db.VarChar(50)
  owner_id       Int
  description    String   @db.VarChar(400)
  has_spotlight  Boolean
  is_on_adoption Boolean  @default(true)
  owned_by       Person   @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pet_person_id_foreign")
  traits         Trait[] // many-to-many relationship
}

model Shelter {
  id      Int      @id @default(autoincrement())
  name    String   @db.VarChar(255)
  address String   @db.VarChar(255)
  city_id Int
  city    City     @relation(fields: [city_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shelter_city_id_foreign")
  persons Person[]
}

model Trait {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  code Int    @db.SmallInt

  pets Pet[] //  many-to-many relationship
}
